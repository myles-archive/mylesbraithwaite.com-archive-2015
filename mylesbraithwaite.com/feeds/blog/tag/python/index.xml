<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Myles Braithwaite: weblog entries tagged in Python.</title><link>http://mylesbraithwaite.com/blog/tag/Python/</link><description>Hoping for the Best, Imagining the Worst.</description><atom:link href="http://mylesbraithwaite.com/feeds/blog/tag/python/" rel="self"></atom:link><language>en-ca</language><lastBuildDate>Tue, 24 Feb 2015 10:30:00 -0500</lastBuildDate><item><title>Doing a short talk on jrnl at the next GTALUG Meeting</title><link>http://mylesbraithwaite.com/blog/2015/feb/24/jrnl-gtalug/</link><description>&lt;p&gt;I'm doing a short talk &lt;a href="http://gtalug.org/meeting/2015-03/"&gt;at the next GTALUG meeting&lt;/a&gt; on 10th March at 7:30pm at Ryerson University on &lt;a href="http://maebert.github.io/jrnl/"&gt;jrnl&lt;/a&gt; a command line journal application written in Python. You should definitily come out.&lt;/p&gt;
&lt;p&gt;Download the &lt;a href="//media.mylesbraithwaite.com/attachments/blog_post/58/gtalug-meeting.ics"&gt;iCalendar file&lt;/a&gt; or &lt;a href="https://www.google.com/calendar/hosted/mylesbraithwaite.com/event?action=TEMPLATE&amp;amp;tmeid=aWsydnE1cjY3ODk2anEydnFrNG1yZ2c0MDggbWVAbXlsZXNicmFpdGh3YWl0ZS5jb20&amp;amp;tmsrc=me%40mylesbraithwaite.com"&gt;add the event to your Google Calendar&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="update"&gt;Update&lt;/h3&gt;
&lt;p&gt;You can view &lt;a href="https://github.com/myles/2015-03-10-jrnl/blob/master/presentation.md" title="Presentation on jrnl"&gt;my slides over on GitHub&lt;/a&gt;.&lt;/p&gt;</description><author>me@mylesbraithwaite.com (Myles Braithwaite)</author><pubDate>Tue, 24 Feb 2015 10:30:00 -0500</pubDate><guid>http://mylesbraithwaite.com/blog/2015/feb/24/jrnl-gtalug/</guid><enclosure url="http://media.mylesbraithwaite.com/attachments/blog_post/58/gtalug-meeting.ics" length="None" type="text/calendar"></enclosure><category>GTALUG</category><category>Talk</category><category>jrnl</category><category>Python</category></item><item><title>Get an OPML File of All Your Public Twitter Lists</title><link>http://mylesbraithwaite.com/blog/2011/jun/28/get-an-opml-file-of-all-your-public-twitter-lists/</link><description>&lt;p&gt;I made this simple python script today to get an OPML file (to be imported into Google Reader) of all my Twitter lists.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'0.1'&lt;/span&gt;
&lt;span class="n"&gt;__project_name__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'TwitterListOPML'&lt;/span&gt;
&lt;span class="n"&gt;__project_link__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://gist.github.com/1051517'&lt;/span&gt;

&lt;span class="n"&gt;TWITTER_LISTS_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"http://api.twitter.com/1/&lt;/span&gt;&lt;span class="si"&gt;%(username)s&lt;/span&gt;&lt;span class="s"&gt;/lists.json"&lt;/span&gt;
&lt;span class="n"&gt;TWITTER_LIST_FEED_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"http://api.twitter.com/1/&lt;/span&gt;&lt;span class="si"&gt;%(username)s&lt;/span&gt;&lt;span class="s"&gt;/lists/&lt;/span&gt;&lt;span class="si"&gt;%(list)s&lt;/span&gt;&lt;span class="s"&gt;/statuses.atom"&lt;/span&gt;
&lt;span class="n"&gt;TWITTER_LIST_HTML_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"http://twitter.com/&lt;/span&gt;&lt;span class="si"&gt;%(username)s&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%(list)s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="n"&gt;OPML_START&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;&amp;lt;!-- OPML generated by TwitterListOPML --&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;&amp;lt;opml version="1.1"&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;    &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;        &amp;lt;title&amp;gt;Twitter Lists&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;    &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;    &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;        &amp;lt;outline text="Twitter Lists" title="Twitter Lists"&amp;gt;"""&lt;/span&gt;
&lt;span class="n"&gt;OPML_END&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""      &amp;lt;/outline&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;    &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;&amp;lt;/opml&amp;gt;"""&lt;/span&gt;

&lt;span class="n"&gt;OPML_OUTLINE_FEED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'&amp;lt;outline text="&lt;/span&gt;&lt;span class="si"&gt;%(title)s&lt;/span&gt;&lt;span class="s"&gt;" title="&lt;/span&gt;&lt;span class="si"&gt;%(title)s&lt;/span&gt;&lt;span class="s"&gt;" type="rss" version="RSS" htmlUrl="&lt;/span&gt;&lt;span class="si"&gt;%(html_url)s&lt;/span&gt;&lt;span class="s"&gt;" xmlUrl="&lt;/span&gt;&lt;span class="si"&gt;%(xml_url)s&lt;/span&gt;&lt;span class="s"&gt;" /&amp;gt;'&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;simplejson&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_lists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'User-Agent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; +&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;__project_name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;__version__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;__project_link__&lt;/span&gt;
    &lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;opener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;opener&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;t_lists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_lists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWITTER_LISTS_URL&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;OPML_START&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;t_list&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;t_lists&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'lists'&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;list_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;list_html_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TWITTER_LIST_HTML_URL&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'list'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'slug'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
        &lt;span class="n"&gt;list_xml_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TWITTER_LIST_FEED_URL&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'list'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'slug'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;OPML_OUTLINE_FEED&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list_title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'html_url'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list_html_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'xml_url'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list_xml_url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;OPML_END&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download: &lt;a href="http://cdn.mylesbraithwaite.com/media/uploads/journal/2011-06-28-get-an-opml-file-of-all-your-public-twitter-lists/twitter_list_to_opml.py.gz"&gt;twitter_list_to_opml.py.gz&lt;/a&gt;&lt;/p&gt;</description><author>me@mylesbraithwaite.com (Myles Braithwaite)</author><pubDate>Tue, 28 Jun 2011 12:31:00 -0400</pubDate><guid>http://mylesbraithwaite.com/blog/2011/jun/28/get-an-opml-file-of-all-your-public-twitter-lists/</guid><category>Twitter</category><category>Feed</category><category>Python</category></item><item><title>What is the Django Template Tag intequaltest and an update on Django Quiz?</title><link>http://mylesbraithwaite.com/blog/2010/may/13/intequaltest-django-quiz/</link><description>&lt;p&gt;&lt;a href="http://gravitymad.com/"&gt;Travis Millward&lt;/a&gt; &lt;a href="http://mylesbraithwaite.com/projects/django-quiz/#c195"&gt;commented&lt;/a&gt; on my &lt;a href="http://mylesbraithwaite.com/projects/django-quiz"&gt;Django Quiz&lt;/a&gt; project today:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey Myles, I believe I'm going to checkout your django quiz. Can you explain what the&lt;/p&gt;
&lt;p&gt;{% if score.corrent_anwsers|intequaltest:question %}
This wont work
{% endif %}
is doing? It looks really good!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First I just like to say I love talking to people so if you ever have a question for me about anything (literally) don't hesitate emailing me (&lt;a href="mailto:me@mylesbraithwaite.com"&gt;me@mylesbraithwaite.com&lt;/a&gt;) or chatting with me (XMPP/GTalk &lt;a href="mailto:me@mylesbraithwaite.com"&gt;me@mylesbraithwaite.com&lt;/a&gt;).&lt;/p&gt;
&lt;p %="" endhighlight=""&gt;{% highlight python %}
def intequaltest(value, arg):
    return (value == arg)&lt;/p&gt;
&lt;p&gt;Okay so &lt;code&gt;intequaltest&lt;/code&gt; is got to be the studied template tag in the world. It's sole purpose is to see if two things (i.e. a &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, etc.) are the same and if they are return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. In this case see if the correct answer is equal to the answer they gave. I will go into the history a little later in this post but essentially this application use to work a lot differently and the only reason this template tag is in here is because I have an issue with copying and pasting.&lt;/p&gt;
&lt;p&gt;When I first started developing the Django Quiz application in 2008 it was for a client. They wanted to quiz their sales consultants on very complex financial process. The consultants could take each quiz as many times as they want, but their "score" wouldn't be submitted to their manager until they got prefix.&lt;/p&gt;
&lt;p&gt;I spent about a two days in July (10th, and 11th) developing this application for the client. In the middle of my second day the client came to me and said they found a better solution, a pice of paper and a pencil.&lt;/p&gt;
&lt;p&gt;I have been asked about this application five or six times in the last month, so I guess it is about time I write my formal apology. This application doesn't work. I tried to start up again on April 28, but my heart isn't really there anymore (my heart was not really there the first time but I was getting paid).&lt;/p&gt;
&lt;p&gt;So will this application ever be completed? Maybe, if one day I wake up and get really excited about coding it again or a client comes along and ask me to code them a quiz application.&lt;/p&gt;</description><author>me@mylesbraithwaite.com (Myles Braithwaite)</author><pubDate>Thu, 13 May 2010 00:00:00 -0400</pubDate><guid>http://mylesbraithwaite.com/blog/2010/may/13/intequaltest-django-quiz/</guid><category>Django</category><category>Django Quiz</category><category>Python</category><category>Project</category></item><item><title>Episteme</title><link>http://mylesbraithwaite.com/blog/2010/mar/23/episteme/</link><description>&lt;p&gt;Back in February I tweeted "Starting work on #Episteme today."&lt;a href="http://twitter.com/mylesb/status/8635677939" title="Tweet on 4th Feb 2010 at 10:17 AM"&gt;#&lt;/a&gt;. A few hours latter I got the following query in an email:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From: Ivan Avery Frey&lt;br&gt;
To: Myles Braithwaite&lt;br&gt;
Date: Thu, Feb 4, 2010 at 3:24 PM&lt;br&gt;
Subject: What's Episteme???&lt;/br&gt;&lt;/br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;Self-explanatory.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Episteme&lt;/strong&gt; is a wiki engine (more of a wiki library) I am currently working on (I have actually been working on it for the last two years). It was originally a fork of &lt;a href="http://code.google.com/p/yaki/"&gt;Yaki&lt;/a&gt; (which powers &lt;a href="http://the.taoofmac.com/"&gt;The Tao of Mac&lt;/a&gt;), then was powered by &lt;a href="http://couchdb.apache.org/"&gt;CouchDB&lt;/a&gt;, and now is a fork of &lt;a href="http://hatta.sheep.art.pl/"&gt;Hatta&lt;/a&gt; (not so much as a fork because I am still going to be using Hatta's &lt;code&gt;WikiStorage&lt;/code&gt; module).&lt;/p&gt;
&lt;p&gt;So why am I working on yet-another-wiki-engine?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I like flat files (easy to backup using rsync).&lt;/li&gt;
&lt;li&gt;I think that &lt;a href="http://en.wikipedia.org/wiki/Relational_database_management_system"&gt;Relation databases&lt;/a&gt; (like MySQL and PostgreSQL) were not design for wiki documents.&lt;/li&gt;
&lt;li&gt;I like storing the documents in a Revision Control System so I can edit them in a text editor.&lt;/li&gt;
&lt;li&gt;I like being able to search.&lt;/li&gt;
&lt;li&gt;I don't ware the same cloths every day why should I have to use the same markup language.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is an example of a wiki document:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;programming&lt;/span&gt;
&lt;span class="n"&gt;Content&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wiki&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="kd"&gt;dynamic&lt;/span&gt; &lt;span class="n"&gt;programming&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;Resources&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;enricozini&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="sr"&gt;/2009/debian/using-python-datetime/&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Tips&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;diveintopython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/|&lt;/span&gt;&lt;span class="n"&gt;Dive&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I am using &lt;a href="http://www.w3.org/Protocols/rfc822/"&gt;RFC822&lt;/a&gt; (similar to an email) for meta information (title, tags, markup, date, author, etc).&lt;/p&gt;
&lt;p&gt;Episteme will always be a work in progress and many never be released.&lt;/p&gt;</description><author>me@mylesbraithwaite.com (Myles Braithwaite)</author><pubDate>Tue, 23 Mar 2010 00:00:00 -0400</pubDate><guid>http://mylesbraithwaite.com/blog/2010/mar/23/episteme/</guid><category>Episteme</category><category>Hatta</category><category>Python</category><category>Wiki</category></item><item><title>Tornado at PyGTA</title><link>http://mylesbraithwaite.com/blog/2010/jan/20/pygta/</link><description>&lt;p&gt;Last night at &lt;a href="http://pygta.org/2010-01/tornado/" title="PyGTA - Tornado Hacking"&gt;PyGTA&lt;/a&gt;, &lt;a href="http://blog.vrplumber.com/index.php?/archives/2418-Tornado-PyGTA-this-month,-PyCon-Dress-Rehearsal-next.html" title="Tornado @ PyGTA this month, PyCon Dress Rehearsal next"&gt;Mike&lt;/a&gt; gave a short talk/demo about his
findings using &lt;a href="http://tornadoweb.org"&gt;Tornado&lt;/a&gt; and &lt;a href="http://couchdb.apache.org"&gt;CouchDB&lt;/a&gt; to write a
real time chat and voting application for &lt;a href="http://us.pycon.org/2010/conference/talks/"&gt;his PyCon talk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tornado is a lightweight non-blocking web server created by
&lt;a href="http://bret.appspot.com/entry/tornado-web-server" title="The technology behind Tornado, FriendFeed's web server"&gt;FriendFeed&lt;/a&gt; and Open Source by &lt;a href="http://developers.facebook.com/news.php?blog=1&amp;amp;story=301" title="Tornado: Facebook's Real-Time Web Framework for Python"&gt;Facebook&lt;/a&gt;. The API is similar
to &lt;a href="http://webpy.org/"&gt;web.py&lt;/a&gt; and App Engine's &lt;a href="http://developers.facebook.com/news.php?blog=1&amp;amp;story=301" title="Tornado: Facebook's Real-Time Web Framework for Python"&gt;webapp framework&lt;/a&gt;. Mike's ending comments was that Tornado can out perform Twisted. But
he found he had to write a lot of code to do things that were built
into Twisted (or any other modern web framework) already.&lt;/p&gt;
&lt;p&gt;His thoughts on CouchDB:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm really beginning to regret the choice of CouchDB for the
back-end.  It's working perfectly well, but I have literally dozens
of pieces of code hanging around for doing SQL-based paging... none
of which are applicable to CouchDB.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Referenced: &lt;a href="http://blog.vrplumber.com/index.php?/archives/2419-Things-Id-like-to-play-with-given-enough-time.html" title="Things I'd like to play with (given enough time)"&gt;Things I'd like to play with (given enough time)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This website (and a few other sites I manage) will be moving from
&lt;a href="http://httpd.apache.org" title="Apache HTTPD"&gt;Apache 2&lt;/a&gt; and &lt;a href="http://code.google.com/p/modwsgi/" title="mod_wsgi"&gt;WSGI&lt;/a&gt; to Tornado and &lt;a href="http://nginx.net"&gt;Nginx&lt;/a&gt; &lt;a href="http://twitter.com/mylesb/status/7772733185" title="Working on a new backend for my website (Tornado, Supervisord, &amp;amp; Nginx). My current setup is Apache2 and WSGI. -- on Twitter at 14th Jan 6:56 PM"&gt;#&lt;/a&gt;. It
will still be built on top of &lt;a href="http://djangoproject.org"&gt;Django&lt;/a&gt; thought so most of the
issues Mike was talking about wouldn't apply to me.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Other people who wrote about this event&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tomlowshang.blogspot.com"&gt;Tom Low-Shang&lt;/a&gt; -- &lt;a href="http://tomlowshang.blogspot.com/2010/01/tornado.html"&gt;Tornado&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><author>me@mylesbraithwaite.com (Myles Braithwaite)</author><pubDate>Wed, 20 Jan 2010 00:00:00 -0500</pubDate><guid>http://mylesbraithwaite.com/blog/2010/jan/20/pygta/</guid><category>Tornado</category><category>Toronto</category><category>Python</category><category>PyGTA</category></item><item><title>Exception Handling in Python</title><link>http://mylesbraithwaite.com/blog/2009/aug/19/exception-handling-python/</link><description>
&lt;p&gt;Last night &lt;a href="http://pygta.org/" title="Python Greater Toronto Area User Group"&gt;PyGTA&lt;/a&gt; was a &lt;em&gt;Exceptional Conditions&lt;/em&gt; round table, like most PyGTA meetings it went &lt;a href="http://tomlowshang.blogspot.com/2009/08/exceptional-condition.html" title="Tom Low-Shang: Exceptional Condition"&gt;philosophical side of programming&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My personal philosophy, in web development, is to log exceptions, not found pages, and performance to almost extreme levels. Then weekly I take the logs and analyzes them with a script which puts them into a database, which groups the results. If an error happens more than five times in the given week the script creates a ticket in the issue tracker for me to work on later. I log all not found pages by real people (not search engine bots) to try and understand why they navigated to that page. The performance log is how long the system took to generate the page and SQL queries and time it took to execute them.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.vrplumber.com/"&gt;Mike&lt;/a&gt; took some good &lt;a href="http://pygta.vrplumber.com/exceptional-conditions.html"&gt;notes&lt;/a&gt; so if you are interested you should definitely check it out.&lt;/p&gt;</description><author>me@mylesbraithwaite.com (Myles Braithwaite)</author><pubDate>Wed, 19 Aug 2009 00:00:00 -0400</pubDate><guid>http://mylesbraithwaite.com/blog/2009/aug/19/exception-handling-python/</guid><category>PyGTA</category><category>Python</category><category>Exception</category><category>Programming</category><category>Logging</category></item><item><title>Talking about Google App Engine @ PyGTA</title><link>http://mylesbraithwaite.com/blog/2009/apr/3/pygta/</link><description>
&lt;p&gt;On 21 April 2009 at 7:30 pm I am going to be giving a talk about &lt;a href="http://code.google.com/appengine/"&gt;Google App Engine&lt;/a&gt; at the &lt;a href="http://linuxcaffe.ca/" rel="friend met"&gt;linuxcaffe&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://code.google.com/appengine/"&gt;Google App Engine&lt;/a&gt; is a platform to building and hosting web applications on Google's infrastructure (which is sometimes called &lt;abbr title="Platform as a Service"&gt;PaaS&lt;/abbr&gt;&lt;sup&gt;&lt;a href="#define-PaaS"&gt;1&lt;/a&gt;&lt;/sup&gt;). It has a pay-for-what-you-use payment level but anything &lt;a href="http://code.google.com/appengine/kb/general.html#quota"&gt;below 5 million pageviews a month&lt;/a&gt;.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a name="define-PaaS"&gt;&lt;/a&gt;PaaS&lt;/dt&gt;
&lt;dd&gt;&lt;strong&gt;P&lt;/strong&gt;latform &lt;strong&gt;a&lt;/strong&gt;s &lt;strong&gt;a&lt;/strong&gt; &lt;strong&gt;S&lt;/strong&gt;ervice is the delivery of a computing platform and solution stack as a service.&lt;/dd&gt;
&lt;/dl&gt;</description><author>me@mylesbraithwaite.com (Myles Braithwaite)</author><pubDate>Fri, 03 Apr 2009 00:00:00 -0400</pubDate><guid>http://mylesbraithwaite.com/blog/2009/apr/3/pygta/</guid><category>Google App Engine</category><category>Toronto</category><category>Python</category><category>PyGTA</category></item><item><title>Generate a secret key for your Django Application</title><link>http://mylesbraithwaite.com/blog/2007/oct/12/secret-key/</link><description>&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;letters&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;digits&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;punctuation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><author>me@mylesbraithwaite.com (Myles Braithwaite)</author><pubDate>Fri, 12 Oct 2007 00:00:00 -0400</pubDate><guid>http://mylesbraithwaite.com/blog/2007/oct/12/secret-key/</guid><category>Django</category><category>Snippets</category><category>Python</category></item></channel></rss>